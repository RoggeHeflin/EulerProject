using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Euler.Functions
{
	/// <summary>
	/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	///	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	///	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	/// </summary>
	public class p0002
	{
		public static int SequenceBrute(int limit)
		{
			List<int> fib = new List<int>();

			fib.Add(1);
			fib.Add(2);

			while (fib.Last() < limit)
			{
				int a = fib[fib.Count() - 2];
				int b = fib[fib.Count() - 1];

				fib.Add(a + b);
			}

			int fibEven = 0;

			foreach(int i in fib)
			{
				if(Common.IsEven(i))
				{
					fibEven = fibEven + i;
				}
			}

			return fibEven;
		}

		public static int SequenceSmart(int limit)
		{
			int a = 1;
			int b = 1;
			int c = a + b;
			int tot = 0;

			while (c < limit)
			{
				tot += c;
				a = b + c;
				b = c + a;
				c = a + b;
			}

			return tot;
		}
	}
}
